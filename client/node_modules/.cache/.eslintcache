[{"/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/index.js":"1","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/App.js":"2","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/reportWebVitals.js":"3","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/hello.js":"4","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/foyer.js":"5","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/create-user.js":"6","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/classic-speed.js":"7","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/login.js":"8"},{"size":671,"mtime":1691453334597,"results":"9","hashOfConfig":"10"},{"size":717,"mtime":1691453334597,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1688696450902,"results":"12","hashOfConfig":"10"},{"size":1492,"mtime":1690254417710,"results":"13","hashOfConfig":"10"},{"size":6288,"mtime":1691514585769,"results":"14","hashOfConfig":"10"},{"size":6876,"mtime":1691453334597,"results":"15","hashOfConfig":"10"},{"size":1418,"mtime":1691453334597,"results":"16","hashOfConfig":"10"},{"size":4352,"mtime":1691453334597,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"lqt1d",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/index.js",[],[],[],"/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/App.js",[],[],"/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/reportWebVitals.js",[],[],"/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/hello.js",[],[],"/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/foyer.js",["46","47","48"],[],"/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/create-user.js",["49","50"],[],"import React, {useState, useEffect} from 'react';\nimport { Col, Button, Row, Container, Card, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport {sha256} from 'js-sha256';\nimport { io } from \"socket.io-client\";\n\nexport default function CreateUser(){\n    const[form, setForm] = useState({\n        userName:\"\",\n        saltScore:\"\",\n        password:\"\",\n        reenter: \"\",\n        email: \"\",\n    });\n\n    const navigate = useNavigate();\n    async function handleSubmit(e){\n        e.preventDefault();\n\n        if(form.password === form.reenter){\n            if(form.password.length >= 16){\n                let saltTemp = Math.floor(Math.random()*1000000000);\n                let tempHash = form.password.concat(saltTemp.toString());\n\n                let hash = (sha256(tempHash));\n                form.saltScore = saltTemp;\n                form.password = hash;\n                form.reenter = hash;\n\n                const newUser = {...form};\n\n                await fetch(\"http://localhost:5050/create-user\",{\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(newUser),\n                }).catch(error =>{\n                    window.alert(error);\n                    return;\n                });\n                localStorage.setItem(\"userName\", form.userName); //setting username to local storage to pass around\n                navigate('/Foyer');\n            }\n            else{\n                alert(\"Password must be at least 16 characters\");\n            }\n        }\n        else{\n            alert(\"Passwords Do Not Match please Re-Enter\");\n        }\n    }\n    function handleChange(value){\n        return setForm((prev)=>{\n            return{...prev, ...value};\n        })\n    }\n    return(\n        <div>\n            <Container>\n                <Row className=\"vh-100 d-flex justify-content-center align-items-center\">\n                    <Col md={8} lg={6} xs={12}>\n                        <Card className='px-4'>\n                            <Card.Body>\n                                <div className=\"mb-3 mt-md-4\">\n                                    <h2 className=\"fw-bold mb-2 text-center text-uppercase\">\n                                        Speed!\n                                    </h2>\n                                    <div className=\"mb-3\">\n                                        <Form onSubmit={handleSubmit}>\n                                            <Form.Group className='mb-3' controlId='Name'>\n                                                <Form.Label className=\"text-center\">\n                                                    Username\n                                                </Form.Label>\n                                                <Form.Control type=\"text\" \n                                                            name=\"username\" \n                                                            id = \"username\" \n                                                            onChange={(e) => handleChange({ userName: e.target.value })} \n                                                            placeholder=\"Enter Username\"/>\n                                            </Form.Group>\n\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                                <Form.Label className=\"text-center\">\n                                                    Email Address\n                                                </Form.Label>\n                                                <Form.Control type=\"email\"\n                                                            name=\"email\"\n                                                            id=\"email\"\n                                                            onChange={(e) => handleChange({ email: e.target.value })}\n                                                            placeholder=\"Enter Email\"/>\n                                            </Form.Group>\n\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                                <Form.Label class=\"text-center\">\n                                                    Password\n                                                </Form.Label>\n                                                <Form.Control type=\"password\" \n                                                            name=\"password\"\n                                                            id=\"password\"\n                                                            onChange={(e) => handleChange({ password: e.target.value })}\n                                                            placeholder=\"Password\" />\n                                            </Form.Group>\n\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                                <Form.Label class=\"text-center\">\n                                                    Re-Enter Password\n                                                </Form.Label>\n                                                <Form.Control type=\"password\" \n                                                            name=\"reenter\"\n                                                            id=\"reenter\"\n                                                            onChange={(e) => handleChange({ reenter: e.target.value })}\n                                                            placeholder=\"Password\" />\n                                            </Form.Group>\n                                            <div className=\"d-grid\">\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Create Account\n                                                </Button>\n                                            </div>\n                                        </Form>\n                                        <div className=\"mt-3\">\n                                            <p className=\"mb-0  text-center\">\n                                                Already have an account?{' '}\n                                                <a href=\"/\" className=\"text-primary fw-bold\">\n                                                    Sign In\n                                                </a>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n\n}","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/classic-speed.js",["51","52","53","54","55","56","57"],[],"import React, {useState, useEffect} from 'react';\nimport { Col, Button, Row, Container, Card, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from \"socket.io-client\";\nimport \"../game.css\"\n\nexport default function CreateUser(){\n    return(\n        <div>\n            <Container>\n                <Row xs={12} md ={4}>\n                    <Col xs={12} md={8}>\n                        Player 2 Hand\n                    </Col>\n                    <Col xs={12} md={4}>\n                        Player 2 Draw Deck\n                    </Col>\n                </Row>\n                <Row xs={12} md ={4}>\n                    <Col xs={12} md={3}>\n                        Left Pull Pile\n                    </Col>\n                    <Col xs={12} md={3}>\n                        Left Play Pile\n                    </Col>\n                    <Col xs={12} md={3}>\n                        Right Play Pile\n                    </Col>\n                    <Col xs={12} md={3}>\n                        Right Pull Pile\n                    </Col>\n                </Row>\n                <Row xs={12} md ={4}>\n                    <Col xs={12} md={8}>\n                        Player 1 Hand\n                    </Col>\n                    <Col xs={12} md={4}>\n                        Player 1 Draw Deck\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};","/home/architect/Documents/School/Soft-3750/cs3750SpeedProject/client/src/components/login.js",["58"],[],"import React, {useState, useEffect} from 'react';\nimport { Col, Button, Row, Container, Card, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport {sha256} from 'js-sha256';\n\nexport default function Login(){\n    const[form, setForm] =useState({\n        userName: \"\",\n        password: \"\",\n    });\n    const navigate = useNavigate();\n    async function handleSubmit(e){\n        e.preventDefault();\n\n        const userResponse = await fetch(\"http://localhost:5050/login-user\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({username: form.userName}),\n        }).catch(error => {\n            window.alert(error);\n            return;\n        });\n        const salt =await userResponse.json();\n        \n        if(salt.saltScore)\n        {\n            let hash = sha256(form.password.concat(salt.saltScore.toString()));\n            form.password = hash;\n            const credentials = {...form}\n            const passResponse = await fetch(\"http://localhost:5050/login-password\",{\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(credentials),\n            }).catch(error => {\n                window.alert(error);\n                return;\n            });\n\n            const loggedIn = await passResponse.json();\n            if(loggedIn.signedIn)\n            {\n                navigate(\"/foyer\");\n            }\n            else{\n                alert(\"Invalid Password\");\n            }\n\n        }\n        else{\n            alert(\"Invalid Username\");\n        }\n    }\n    \n    function handleChange(value){\n        return setForm((prev)=>{\n            return{...prev, ...value};\n        })\n    }\n\n    return(\n        <div>\n        <Container>\n          <Row className=\"vh-100 d-flex justify-content-center align-items-center\">\n            <Col md={8} lg={6} xs={12}>\n            <div className=\"border border-2 border-primary\"></div>\n              <Card className=\"shadow px-4\">\n                <Card.Body>\n                  <div className=\"mb-3 mt-md-4\">\n                    <h2 className=\"fw-bold mb-2 text-center text-uppercase \">Logo</h2>\n                    <div className=\"mb-3\">\n                      <Form onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"Name\">\n                          <Form.Label className=\"text-center\">\n                            Username\n                          </Form.Label>\n                          <Form.Control type=\"text\" \n                            name=\"userName\"\n                            id=\"userName\"\n                            onChange={(e) => handleChange({ userName: e.target.value })}\n                            placeholder=\"Enter Name\" />\n                        </Form.Group>\n  \n                        <Form.Group\n                          className=\"mb-3\"\n                          controlId=\"formBasicPassword\"\n                        >\n                          <Form.Label>Password</Form.Label>\n                          <Form.Control type=\"password\" \n                                        name=\"password\"\n                                        id=\"password\"\n                                        onChange={(e) => handleChange({ password: e.target.value })}\n                                        placeholder=\"Password\" />\n                        </Form.Group>\n                        \n                        <div className=\"d-grid\">\n                          <Button variant=\"primary\" type=\"submit\">\n                            Login\n                          </Button>\n                        </div>\n                      </Form>\n                      <div className=\"mt-3\">\n                         <p className=\"mb-0  text-center\">\n                            Don't have an account?{' '}\n                            <a href=\"/create-user\" className=\"text-primary fw-bold\">\n                              Sign Up\n                            </a>\n                          </p>\n                        </div>\n                    </div>\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n}",{"ruleId":"59","severity":1,"message":"60","line":2,"column":39,"nodeType":"61","messageId":"62","endLine":2,"endColumn":43},{"ruleId":"63","severity":1,"message":"64","line":45,"column":6,"nodeType":"65","endLine":45,"endColumn":8,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"64","line":94,"column":6,"nodeType":"65","endLine":94,"endColumn":8,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"68","line":1,"column":26,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"59","severity":1,"message":"69","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":12},{"ruleId":"59","severity":1,"message":"70","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"68","line":1,"column":26,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"59","severity":1,"message":"71","line":2,"column":15,"nodeType":"61","messageId":"62","endLine":2,"endColumn":21},{"ruleId":"59","severity":1,"message":"72","line":2,"column":39,"nodeType":"61","messageId":"62","endLine":2,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":2,"column":45,"nodeType":"61","messageId":"62","endLine":2,"endColumn":49},{"ruleId":"59","severity":1,"message":"73","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":21},{"ruleId":"59","severity":1,"message":"69","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":12},{"ruleId":"59","severity":1,"message":"68","line":1,"column":26,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["74"],["75"],"'useEffect' is defined but never used.","'io' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'useNavigate' is defined but never used.",{"desc":"76","fix":"77"},{"desc":"76","fix":"78"},"Update the dependencies array to be: [socket]",{"range":"79","text":"80"},{"range":"81","text":"80"},[1074,1076],"[socket]",[2513,2515]]